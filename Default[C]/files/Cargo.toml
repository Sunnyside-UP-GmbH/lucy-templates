[package]
name = "wiicle_backend"
version.workspace = true
authors.workspace = true
description.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
publish = false
build = "build/main.rs"

[workspace]
members = [ 
    ".", 
    "./lib/core", 
    "./services/grpc", 
    "./services/http", 
    "./lib/common", 
    "./services/database", 
    "./lib/cli", 
    "./services/database/migrations", 
    "./lib/context", 
    "./features/auth",
    "./features/authz",
    "./lib/i18n",
    "./lib/settings"
    ]
resolver = "2"
exclude = ["target/*"]

[workspace.metadata]

[package.metadata.docs.rs]
# Set dependencies to false if you don't want docs from external crates
dependencies = false

[workspace.package]
authors = ["Gradlon von KÃ¤nel"]
description = "Wiicle Backend"
edition = "2021"
license = "MIT"
repository = ""
version = "0.1.0"
homepage = "https://www.integral-systems.ch"

[workspace.lints.rust]
unsafe-code = "forbid"
# unused = "allow"
unused = "warn"
missing_docs = "warn"

[workspace.lints.rustdoc]
missing_crate_level_docs = "allow"

[workspace.lints.clippy]
unwrap_used = "warn"
cargo = "allow"
pedantic = "allow" 
expect_used = "warn"
multiple_crate_versions = "allow"

[lints]
workspace = true

[build-dependencies]
serde.workspace = true
serde_json.workspace = true
config.workspace = true
once_cell.workspace = true
serde_derive.workspace = true
schemars.workspace = true
strum_macros.workspace = true
language-tags.workspace = true
thiserror.workspace = true
anyhow.workspace = true
color-eyre.workspace = true
settings.workspace = true

[dependencies]
# Crates
cli = { path = "./lib/cli" }
lucy_core.workspace = true
settings.workspace = true
i18n_lib.workspace = true
autometrics.workspace = true
http_service.workspace = true
grpc_service.workspace = true
tracing.workspace = true
anyhow_trace.workspace = true
tokio.workspace = true
tracing-subscriber.workspace = true
color-eyre.workspace = true
anyhow.workspace = true
http.workspace = true
database.workspace = true
common.workspace = true
rust-i18n.workspace = true
async-trait.workspace = true

[workspace.dependencies]
# Crates
lucy_core = { path = "./lib/core" } # depends on your needs
database = { path = "./services/database" } # depends on your needs
common = { path = "./lib/common" }
context = { path = "./lib/context" }
auth = { path = "./features/auth" }
authz = { path = "./features/authz" }
http_service = { path = "./services/http"}
grpc_service = { path = "./services/grpc"}
i18n_lib = { path = "./lib/i18n" }
settings = { path = "./lib/settings" }

# Base
tokio = { version = "1.36.0", features = ["full", "rt-multi-thread"] }
async-std = { version = "1", features = ["attributes", "tokio1"] }
async-trait = "0.1.57"
futures = "0.3"

# http
http  = "1.1"
http-body = "1.0"

# hyper
hyper = { version = "1.0.0", features = ["full"] }
hyper-util = "0.1"

tower = { version = "0.5.1", features = ["steer", "util"] }
tower-http = { version = "0.5.2", features = ["cors", "trace", "fs"] }
tower-cookies = { version = "0.10.0" }
tower-service = "0.3.3"

# Axum
axum = { version = "0.7.5", features = ["ws", "macros", "multipart", "tracing"] }
axum-macros = "0.4.1"
axum-messages = "0.7.0"
axum-extra = "0.9.3"
axum-helmet = "0.1"

# Datatypes
axum-jsonschema = { version = "0.8.0", features = ["aide"] }
serde = { version = "1.0.144", features = ["derive", "rc"] }
serde_json = "1.0.113"
serde_yaml = "0.9"
serde_derive = "1.0.196"
schemars = { version = "0.8.16", features = ["uuid1"] }
schemars-zod = "0.1.5"

# Swagger
utoipa = {git = "https://github.com/juhaku/utoipa", branch = "master", features = ["axum_extras"]}
utoipa-scalar = {git = "https://github.com/juhaku/utoipa", branch = "master", features = ["axum"]}

# Tonic
tonic = "0.12.0"
tonic-middleware = "0.2.1"
tonic-web = "0.12.0"
tonic-reflection = "0.12.0"
tonic-async-interceptor = "0.12.0"
prost = "0.13.1"

# DB's
fred = { version = "9.1.2", features = ["mocks"] }
sea-orm = { version = "1.0.1", features = [ "sqlx-postgres", "runtime-tokio-rustls", "macros", "debug-print", "mock"] }
sea-orm-migration = { version = "1.0.1", features = ["sqlx-postgres", "runtime-tokio-rustls"]}
sqlx = { version = "0.7.4", features = ["sqlite", "time", "runtime-tokio"] }
surrealdb = "1.5.4"

# Tracing and Logging
autometrics = { version = "2.0.0", features = ["prometheus-exporter"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "chrono"] }
anyhow = { version = "1.0.82", features = ["backtrace"] }
thiserror = "1.0.50"
anyhow_trace = "0.1.3"
tracing = "0.1"
tower-otel = "0.2.0"
color-eyre = "0.6.3"

# I18N
language-tags = { version = "0.3.2", features = ["serde"] }
rust-i18n = "3.1.2"

# Auth/Authz
casdoor-rust-sdk = "1.3.0"
casbin = { version = "2.2.0", default-features = false, features = ["runtime-async-std", "logging", "incremental"] }

# Utils
uuid = { version = "1.8.0", features = ["v4", "v7","serde", "fast-rng"] }
lazy-regex = "3.1.0"
strum_macros = "0.26.2"
derive_more = { version = "1.0.0-beta", features = ["from"]}
serde_with = "3.8.1"
time = "0.3.30"
config = "0.14.0"
clap = { version = "4.5.3", features = ["derive"]}
reqwest = { version = "0.12.2", features = ["json"] }
structstruck ={ version = "0.4.1"}
rayon = "1.10.0"
figlet-rs = "0.1.5"
ansi_term = "0.12.1"
argon2 = "0.5.3"
lazy_static = "1.4.0"

# Time
chrono = "0.4.19"
chrono-tz = "0.10.0"

# Datatypes
once_cell = "1.19.0"

#testing
mockall ="0.13.0"
serial_test = "3.1.1"
tokio-test = "0.4.4"
pretty_assertions = "1.4.0"
tonic-mock = "0.3.0"

[workspace.dev-dependencies]
tokio = { version = "1", features = ["full"] }
testresult = "0.4.0"
pretty_assertions.workspace = true

[dev-dependencies]
anyhow.workspace = true
reqwest.workspace = true
tokio.workspace = true
serde_json.workspace = true
tokio-test.workspace = true
lucy_core.workspace = true
pretty_assertions.workspace = true

[profile.dev]
debug = true

[profile.release]
debug = false
lto = true
codegen-units = 1
panic = "abort"